{"version":3,"sources":["actions/weatherActions.js","utils/index.js","components/DayCard .js","components/DegreeToggle.js","components/UserPagination.js","components/BarChart.js","components/Loading.js","components/WeatherForecast.js","App.js","reducers/weatherReducer.js","reducers/index.js","index.js"],"names":["GET_WEATHER","GET_WEATHER_SUCCESS","GET_WEATHER_FAILURE","fetchWeatherForecasts","dispatch","a","type","fetch","response","json","data","weatherData","list","result","reduce","r","dateFilter","dt_txt","split","push","Object","create","payload","kelvinToFahrenheit","kelvinValue","Math","round","kelvinToCelsius","DayCard","props","fahrenheitAvg","avg","celsiusAvg","fahrenheit","temps","map","temp","celsius","className","onClick","scale","setTemperatures","showChartVisibility","moment","date","format","DegreeToggle","value","handleChange","Fragment","RadioGroup","aria-label","name","onChange","FormControlLabel","control","Radio","label","checked","useStyles","makeStyles","theme","root","margin","spacing","usePagination","variant","color","paginate","style","fontSize","VerticalBar","labels","temperatures","charAt","toUpperCase","datasets","backgroundColor","options","Loading","Container","maxWidth","WeatherForecast","useState","setScale","showChart","setShowChart","pagination","setPagination","weather","useSelector","state","useDispatch","dataArr","keys","useEffect","length","arr","num","averageTemperature","averageData","accumulator","currentValue","event","target","celsiusTemps","fahrenheitTemps","convertCelsiusTempsToFahrenheit","UserPagination","data1","data2","key","index","main","includes","BarChart","App","initialState","loading","hasErrors","rootReducer","combineReducers","action","actions","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.609a2b2c.chunk.js","sourcesContent":["export const GET_WEATHER = 'GET_WEATHER'\nexport const GET_WEATHER_SUCCESS = 'GET_WEATHER_SUCCESS'\nexport const GET_WEATHER_FAILURE = 'GET_WEATHER_FAILURE'\n\nexport const getWeatherForecasts = () => ({\n    type: GET_WEATHER,\n  })\n  \n  export const getWeatherForecastsSuccess = (posts) => ({\n    type: GET_WEATHER_SUCCESS,\n    payload: posts,\n  })\n  \n  export const getWeatherForecastsFailure = () => ({\n    type: GET_WEATHER_FAILURE,\n  })\n\n  export const fetchWeatherForecasts = ()  =>{\n\n    return async (dispatch) => {\n\n      dispatch(getWeatherForecasts())\n  \n      try {  \n        const response = await fetch('https://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=75f972b80e26f14fe6c920aa6a85ad57&cnt=400')  \n        const data = await response.json()\n        const weatherData = data.list\n        const result = weatherData.reduce(function (r, a) {\n          const dateFilter = a.dt_txt.split(' ')[0];\n            r[dateFilter] = r[dateFilter] || [];\n            r[dateFilter].push(a);\n            return r;\n        }, Object.create(null));\n        dispatch(getWeatherForecastsSuccess(result))\n\n      } catch (error) {\n        dispatch(getWeatherForecastsFailure())\n      }\n    \n  }\n}\n","export const kelvinToFahrenheit = (kelvinValue) => Math.round((kelvinValue - 273.15) * 9/5 + 32)\nexport const kelvinToCelsius = (kelvinValue) => Math.round(kelvinValue - 273.15)\nexport const convertFahrenheitTempsToCelsius = (temps) => temps.map(temp => Math.round((temp - 32) * 5/9))\nexport const convertCelsiusTempsToFahrenheit = (temps) => temps.map(temp => Math.round((temp * 9/5)  + 32))","import { kelvinToFahrenheit, kelvinToCelsius } from '../utils'\nimport React from 'react';\nimport moment from 'moment'\n\n\nconst DayCard  = (props) => {\n\n  const fahrenheitAvg = kelvinToFahrenheit(props.avg)\n  const celsiusAvg = kelvinToCelsius(props.avg)\n\n  const fahrenheit = props.temps.map((temp) => kelvinToFahrenheit(temp))\n  const celsius = props.temps.map((temp) => kelvinToCelsius(temp))\n\n  const handleClick = () => {\n    const temps = props.scale === 'celsius' ? celsius : fahrenheit\n    props.setTemperatures(temps)\n    props.showChartVisibility()\n     }\n    return (\n      <div className=\"details\" onClick={handleClick}>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <label>Temp:</label>\n          <p className=\"card-text\">{props.scale === \"celsius\" ? celsiusAvg + \"°C\" : fahrenheitAvg + \"°F\"}</p>\n          <label>Date:</label>\n          <p className=\"card-text\">{moment(props.date).format(\"DD MMM YY\")}</p>\n        </div>\n      </div>\n      <div>\n      </div>\n    </div>       \n    );\n};\nexport default DayCard;\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport '../styles/weather.css'\n\nconst DegreeToggle = ({value, handleChange}) => {\n  \n  return (\n<React.Fragment>\n  <RadioGroup aria-label=\"\" name=\"\" value={value} onChange={handleChange}   className=\"toggle\">\n    <FormControlLabel value=\"fahrenheit\" control={<Radio />} label=\"fahrenheit\" checked={value === \"fahrenheit\" ?true: false}/>\n    <FormControlLabel value=\"celsius\" control={<Radio />} label=\"celsius\" />\n  </RadioGroup>\n</React.Fragment>\n  )\n}\n\nexport default DegreeToggle;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport '../styles/weather.css'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),  \n      },\n    },\n  }));\n\nfunction usePagination(props) {\n\n    const classes = useStyles();\n    \n     return (\n        <div className=\"arrow\">\n        <ArrowBackIcon variant=\"outlined\" color=\"primary\" onClick={() => props.paginate('previous')}  style={{ fontSize: 50 }}/>\n        <ArrowForwardIcon variant=\"outlined\" color=\"primary\" onClick={()=>props.paginate('next')} style={{ fontSize: 50 }} />\n      </div>\n     )\n    }\nexport default usePagination;\n","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst VerticalBar = (props) => {\n    let values = props.temperatures.map(temp => `${temp} ${props.scale.charAt(0).toUpperCase()}`)\n   \n     const data = {\n     labels: values,\n  datasets: [\n    {\n      data: props.temperatures,\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(255, 99, 132, 0.2)',\n      ]\n    },\n  ],\n};\n    return(\n      <React.Fragment>\n          <div>\n          <div className='header'>\n            <h1 className='title'>Temperatures Of The Day</h1>\n          </div>\n         <Bar data={data} options={{}} />\n        </div> \n\n      </React.Fragment> \n    )\n}\nexport default VerticalBar;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nexport default function Loading() {\n  return (\n    <React.Fragment>\n     \n      <Container maxWidth=\"sm\" className=\"loading\">\n      <p className=\"load-data\">Loading .......</p>\n       \n      </Container>\n    </React.Fragment>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport {fetchWeatherForecasts }from '../actions/weatherActions'\nimport Container from '@material-ui/core/Container'\nimport DayCard from './DayCard '\nimport DegreeToggle from './DegreeToggle'\nimport UserPagination from './UserPagination';\nimport BarChart from './BarChart'\nimport Loading from './Loading'\nimport '../styles/weather.css'\nimport { convertFahrenheitTempsToCelsius, convertCelsiusTempsToFahrenheit } from '../utils'\n\nconst WeatherForecast = () => {\n    const [scale, setScale] = useState('fahrenheit');\n    const [showChart, setShowChart] = useState(false)\n    const [temperatures, setTemperatures] = useState([])\n    const [pagination, setPagination] = useState([])\n   \n    const handleChange = (event) => {\n      setScale(event.target.value);\n      if (showChart) { // only convert when a chart is displayed\n        if(event.target.value === 'celsius') {\n          const celsiusTemps = convertFahrenheitTempsToCelsius(temperatures)\n          setTemperatures(celsiusTemps)\n        } else {\n          const fahrenheitTemps = convertCelsiusTempsToFahrenheit(temperatures)\n          setTemperatures(fahrenheitTemps)\n        }\n      }\n    };\n\n    const showChartVisibility =  () => {\n      return showChart ? setShowChart(false) : setShowChart(true)\n \n    }\n\n    const weather = useSelector((state) => state.weather)\n   \n    const dispatch = useDispatch();\n\n    const dataArr = Object.keys(weather.weather)\n\n    const paginate = (value) => {\n      let data = Object.keys(weather.weather) \n      if(value === 'previous'){\n        let data1 = [];\n        for(let num=0; num<3; num++) {\n          data1.push(data[num])\n          \n        }\n        setPagination(data1)\n      }else{\n        let data2 = [];\n        for(let num=3; num<6; num++) { \n          data2.push(data[num])   \n        }\n        setPagination(data2)\n      }\n    }\n    useEffect(() => {\n      dispatch(fetchWeatherForecasts())\n    \n    }, [dispatch])\n\n    useEffect(() => {\n      dispatch(fetchWeatherForecasts())\n    \n    }, [dispatch])\n\n\n    useEffect(() => {\n      if(weather.weather.length !== 0){\n        let arr = [];\n        let data = Object.keys(weather.weather)\n        for(let num=0; num<3; num++) {    \n          arr.push(data[num])\n        }      \n        setPagination(arr)\n      }\n    },[weather.weather, dataArr.length])\n\n    const averageTemperature = function(averageData){\n      if(averageData){\n          return averageData.reduce((accumulator, currentValue) => {\n          let data = (accumulator + currentValue)/averageData.length\n          return data\n         \n      }, 0)\n      }\n    }\n    \n    return (\n      <React.Fragment>\n        {\n          Object.keys(weather.weather).length === 0 ? <Loading/> : <Container className=\"cover\">            \n          <div><DegreeToggle handleChange={handleChange} value={scale}/></div>\n          <div><UserPagination paginate={paginate}/></div>\n            <div className=\"data\">\n            { \n          Object.keys(weather.weather).map(function(key, index) {\n                let temps = weather.weather[key].map(temp => temp.main.temp)\n                return pagination.includes(key)?<div key={index}><DayCard date={key} avg={averageTemperature(temps)} scale={scale} temps={temps} showChartVisibility={showChartVisibility} setTemperatures={setTemperatures} /></div>:\"\"\n              })\n            }\n            </div>\n            { showChart ? <BarChart temperatures={temperatures} scale={scale} /> : ''}\n          </Container>\n        }\n        \n\n      </React.Fragment>\n    \n      \n    )};\nexport default WeatherForecast;\n   ","import React from 'react'\nimport './App.css';\nimport WeatherForecast from './components/WeatherForecast'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WeatherForecast />\n    </div>\n  );\n}\n\nexport default App;\n","import * as actions from '../actions/weatherActions'\nexport const initialState = {\n    weather: [],\n    loading: false,\n    hasErrors: false,\n  }\n  \n  export default function weatherReducer(state = initialState, action) {\n\n    switch (action.type) {\n\n        case actions.GET_WEATHER:\n            return {...state, loading: true}\n\n        case actions.GET_WEATHER_SUCCESS:\n            return {weather: action.payload, loading: false, hasErrors: false}\n\n        case actions.GET_WEATHER_FAILURE:\n            return {...state, loading: false, hasErrors: true}\n\n      default:\n        return state\n    }\n  }\n  ","import {combineReducers} from 'redux'\nimport weatherReducer from './weatherReducer'\n\nconst rootReducer = combineReducers({\n    weather: weatherReducer\n  })\n  \n  export default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport './index.css';\nimport App from './App';\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}